{
    "patches": [
        {
            "label": "2025-09-30_17-38-30",
            "content": "@@ -21,16 +21,17 @@\n ef_init_\n+ \n (self, s\n@@ -37,16 +37,17 @@\n species:\n+ \n str, sou\n@@ -49,16 +49,17 @@\n , sound:\n+ \n str):%0A  \n",
            "lines": "4"
        },
        {
            "label": "2025-09-30_17-42-24",
            "content": "@@ -7,16 +7,17 @@\n Animal:%0A\n+%0A\n     def_\n@@ -36,17 +36,16 @@\n species:\n- \n str, sou\n@@ -83,79 +83,5 @@\n cies\n-%0A    self.sound = sound%0A    self.age = o%0A%0A    def makeSound (self) -%3E str%0A%0A\n+ \n",
            "lines": "4"
        },
        {
            "label": "2025-09-30_18-00-36",
            "content": "@@ -156,276 +156,6 @@\n  str\n-%0A        if self.age %3E= 0:%0A            return %22filhote%22%0A        if self.age %3E= 1:%0A            return %22crian%C3%A7a%22%0A        if self.age %3E= 2:%0A            return %22adulto%22%0A        if self.age %3E= 3:%0A            return %22idoso%22%0A        if self.age %3E= 4:%0A            return %22morto%22\n %0A%0A\n",
            "lines": "8"
        },
        {
            "label": "2025-09-30_18-06-21",
            "content": "@@ -428,2272 +428,4 @@\n o%22%0A%0A\n-def ageBy(self, increment: int) -%3E None:%0A        # envelhece o animal. Se j%C3%A1 estiver morto, imprime warning.%0A        if self.age %3E= 4:%0A            # se j%C3%A1 morreu, qualquer tentativa de envelhecer tamb%C3%A9m avisa%0A            print(f%22warning: %7Bself.species%7D morreu%22)%0A            return%0A%0A        self.age += increment%0A        if self.age %3E= 4:%0A            # atingiu ou ultrapassou a morte%0A            print(f%22warning: %7Bself.species%7D morreu%22)%0A            self.age = 4%0A%0A    def toString(self) -%3E str:%0A        # representa%C3%A7%C3%A3o no formato pedido: %22%7Bspecies%7D:%7Bage%7D:%7Bsound%7D%22%0A        return f%22%7Bself.species%7D:%7Bself.age%7D:%7Bself.sound%7D%22%0A%0A    # opcional: manter __str__ para que print(animal) funcione como toString()%0A    def __str__(self) -%3E str:%0A        return self.toString()%0A%0A%0Adef main() -%3E None:%0A    animal = Animal(%22%22, %22%22)  # animal inicial %22vazio%22%0A    try:%0A        while True:%0A            line = input()%0A            # imprime linha com $ como no exemplo de shell%0A            print(%22$%22 + line)%0A%0A            parts = line.split()%0A            if not parts:%0A                continue%0A%0A            cmd = parts%5B0%5D%0A%0A            if cmd == %22end%22:%0A                break%0A%0A            elif cmd == %22init%22:%0A                # init %3Cspecies%3E %3Csound%3E%0A                if len(parts) %3C 3:%0A                    print(%22fail: comando invalido%22)%0A                    continue%0A                species = parts%5B1%5D%0A                sound = parts%5B2%5D%0A                animal = Animal(species, sound)%0A%0A            elif cmd == %22grow%22:%0A                # grow %3Cincrement%3E%0A                if len(parts) != 2:%0A                    print(%22fail: comando invalido%22)%0A                    continue%0A                try:%0A                    inc = int(parts%5B1%5D)%0A                except ValueError:%0A                    print(%22fail: comando invalido%22)%0A                    continue%0A                animal.ageBy(inc)%0A%0A            elif cmd == %22noise%22:%0A                # imprime o som retornado por makeSound%0A                print(animal.makeSound())%0A%0A            elif cmd == %22show%22:%0A                print(animal.toString())%0A%0A            else:%0A                print(%22fail: comando invalido%22)%0A%0A    except EOFError:%0A        # finaliza silenciosamente no EOF (%C3%BAtil para testes autom%C3%A1ticos)%0A        pass%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "18"
        },
        {
            "label": "2025-09-30_18-10-16",
            "content": "@@ -18,17 +18,14 @@\n  def\n- _\n _init_\n-_\n (sel\n@@ -47,17 +47,16 @@\n , sound:\n- \n str):%0A  \n@@ -61,169 +61,54 @@\n     \n-    # Esp%C3%A9cie do animal%0A        self.species = species%0A        # Som caracter%C3%ADstico%0A        self.sound = sound%0A        # Idade/est%C3%A1gio de vida (0 = filhote)%0A    \n+self.species = species%0A    self.sound = sound%0A\n     \n@@ -118,17 +118,17 @@\n f.age = \n-0\n+o\n %0A%0A    de\n@@ -138,16 +138,17 @@\n akeSound\n+ \n (self) -\n@@ -144,33 +144,32 @@\n nd (self) -%3E str\n-:\n %0A        if self\n@@ -173,17 +173,17 @@\n elf.age \n-=\n+%3E\n = 0:%0A   \n@@ -203,24 +203,16 @@\n rn %22\n----%22   # \n filhote\n+%22\n %0A   \n@@ -232,12 +232,12 @@\n age \n-== 4\n+%3E= 1\n :%0A  \n@@ -258,120 +258,386 @@\n rn %22\n-RIP%22   # morto%0A        return self.sound%0A%0A    def ageBy(self, increment: int) -%3E None:%0A        if self.age %3E= 4:\n+crian%C3%A7a%22%0A        if self.age %3E= 2:%0A            return %22adulto%22%0A        if self.age %3E= 3:%0A            return %22idoso%22%0A        if self.age %3E= 4:%0A            return %22morto%22%0A%0Adef ageBy(self, increment: int) -%3E None:%0A        # envelhece o animal. Se j%C3%A1 estiver morto, imprime warning.%0A        if self.age %3E= 4:%0A            # se j%C3%A1 morreu, qualquer tentativa de envelhecer tamb%C3%A9m avisa\n %0A   \n@@ -705,16 +705,17 @@\n  return%0A\n+%0A\n         \n@@ -754,32 +754,77 @@\n  self.age %3E= 4:%0A\n+            # atingiu ou ultrapassou a morte%0A\n             prin\n@@ -929,57 +929,205 @@\n     \n-return f%22%7Bself.species%7D:%7Bself.age%7D:%7Bself.sound%7D%22%0A\n+# representa%C3%A7%C3%A3o no formato pedido: %22%7Bspecies%7D:%7Bage%7D:%7Bsound%7D%22%0A        return f%22%7Bself.species%7D:%7Bself.age%7D:%7Bself.sound%7D%22%0A%0A    # opcional: manter __str__ para que print(animal) funcione como toString()\n %0A   \n@@ -1196,16 +1196,24 @@\n f main()\n+ -%3E None\n :%0A    an\n@@ -1233,16 +1233,42 @@\n (%22%22, %22%22)\n+  # animal inicial %22vazio%22\n %0A    try\n@@ -1319,16 +1319,8 @@\n ut()\n-.strip()\n %0A   \n@@ -1332,48 +1332,54 @@\n     \n-if line == %22%22:%0A                continue%0A\n+# imprime linha com $ como no exemplo de shell\n %0A   \n@@ -1408,27 +1408,8 @@\n ine)\n-  # echo do comando\n %0A%0A  \n@@ -1435,24 +1435,76 @@\n ine.split()%0A\n+            if not parts:%0A                continue%0A%0A\n             \n@@ -1623,160 +1623,626 @@\n     \n+# init %3C\n species\n-, \n+%3E %3C\n sound\n- = parts%5B1%5D, parts%5B2%5D%0A                animal = Animal(species, sound)%0A%0A            elif cmd == %22grow%22:%0A                inc = int(parts%5B1%5D)\n+%3E%0A                if len(parts) %3C 3:%0A                    print(%22fail: comando invalido%22)%0A                    continue%0A                species = parts%5B1%5D%0A                sound = parts%5B2%5D%0A                animal = Animal(species, sound)%0A%0A            elif cmd == %22grow%22:%0A                # grow %3Cincrement%3E%0A                if len(parts) != 2:%0A                    print(%22fail: comando invalido%22)%0A                    continue%0A                try:%0A                    inc = int(parts%5B1%5D)%0A                except ValueError:%0A                    print(%22fail: comando invalido%22)%0A                    continue\n %0A   \n@@ -2306,16 +2306,72 @@\n noise%22:%0A\n+                # imprime o som retornado por makeSound%0A\n         \n@@ -2563,24 +2563,97 @@\n t EOFError:%0A\n+        # finaliza silenciosamente no EOF (%C3%BAtil para testes autom%C3%A1ticos)%0A\n         pass\n",
            "lines": "95"
        },
        {
            "label": "2025-09-30_18-15-38",
            "content": "class Animal:\n    def __init__(self, species: str, sound: str):\n        # Esp\u00e9cie do animal\n        self.species = species\n        # Som caracter\u00edstico\n        self.sound = sound\n        # Idade/est\u00e1gio de vida (0 = filhote)\n        self.age = 0\n\n    def makeSound(self) -> str:\n        if self.age == 0:\n            return \"---\"   # filhote\n        if self.age == 4:\n            return \"RIP\"   # morto\n        return self.sound\n\n    def ageBy(self, increment: int) -> None:\n        if self.age >= 4:\n            print(f\"warning: {self.species} morreu\")\n            return\n        self.age += increment\n        if self.age >= 4:\n            print(f\"warning: {self.species} morreu\")\n            self.age = 4\n\n    def toString(self) -> str:\n        return f\"{self.species}:{self.age}:{self.sound}\"\n\n    def __str__(self) -> str:\n        return self.toString()\n\n\ndef main():\n    animal = Animal(\"\", \"\")\n    try:\n        while True:\n            line = input().strip()\n            if line == \"\":\n                continue\n\n            print(\"$\" + line)  # echo do comando\n\n            parts = line.split()\n            cmd = parts[0]\n\n            if cmd == \"end\":\n                break\n\n            elif cmd == \"init\":\n                species, sound = parts[1], parts[2]\n                animal = Animal(species, sound)\n\n            elif cmd == \"grow\":\n                inc = int(parts[1])\n                animal.ageBy(inc)\n\n            elif cmd == \"noise\":\n                print(animal.makeSound())\n\n            elif cmd == \"show\":\n                print(animal.toString())\n\n            else:\n                print(\"fail: comando invalido\")\n\n    except EOFError:\n        pass\n\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "71"
        }
    ]
}